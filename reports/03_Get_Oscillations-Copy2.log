Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = plt.figure(figsize=(12,8))
plt.plot(t, smd_euler[:,0], 'o-', label='Euler')
plt.plot(t, smd_eulercromer[:,0], 'o-', label='Euler-cromer')
plt.plot(t, smd_rk2[:,0], 's-', label='rk2')
plt.plot(t, smd_heun[:,0], '-', label='Heun')
plt.plot(t, x_smd2, '--', color='k', label='analytical')
plt.title('Spring-mass system with various methods (dashed line).\n')
plt.xlabel('Time [s]')
plt.ylabel('$x$ [m]')
plt.xlim(9.42,9.43)
plt.ylim(0.295,0.305)
plt.legend();
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_1915/1741305460.py[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mt[0m[0;34m,[0m [0msmd_rk2[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0;34m's-'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'rk2'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mt[0m[0;34m,[0m [0msmd_heun[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0;34m'-'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'Heun'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mt[0m[0;34m,[0m [0mx_smd2[0m[0;34m,[0m [0;34m'--'[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m'k'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'analytical'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0mplt[0m[0;34m.[0m[0mtitle[0m[0;34m([0m[0;34m'Spring-mass system with various methods (dashed line).\n'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m [0mplt[0m[0;34m.[0m[0mxlabel[0m[0;34m([0m[0;34m'Time [s]'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/matplotlib/pyplot.py[0m in [0;36mplot[0;34m(scalex, scaley, data, *args, **kwargs)[0m
[1;32m   2755[0m [0;34m@[0m[0m_copy_docstring_and_deprecators[0m[0;34m([0m[0mAxes[0m[0;34m.[0m[0mplot[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2756[0m [0;32mdef[0m [0mplot[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mscalex[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mscaley[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2757[0;31m     return gca().plot(
[0m[1;32m   2758[0m         [0;34m*[0m[0margs[0m[0;34m,[0m [0mscalex[0m[0;34m=[0m[0mscalex[0m[0;34m,[0m [0mscaley[0m[0;34m=[0m[0mscaley[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2759[0m         **({"data": data} if data is not None else {}), **kwargs)

[0;32m/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/matplotlib/axes/_axes.py[0m in [0;36mplot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1630[0m         """
[1;32m   1631[0m         [0mkwargs[0m [0;34m=[0m [0mcbook[0m[0;34m.[0m[0mnormalize_kwargs[0m[0;34m([0m[0mkwargs[0m[0;34m,[0m [0mmlines[0m[0;34m.[0m[0mLine2D[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1632[0;31m         [0mlines[0m [0;34m=[0m [0;34m[[0m[0;34m*[0m[0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1633[0m         [0;32mfor[0m [0mline[0m [0;32min[0m [0mlines[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1634[0m             [0mself[0m[0;34m.[0m[0madd_line[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/matplotlib/axes/_base.py[0m in [0;36m__call__[0;34m(self, data, *args, **kwargs)[0m
[1;32m    310[0m                 [0mthis[0m [0;34m+=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    311[0m                 [0margs[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m1[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 312[0;31m             [0;32myield[0m [0;32mfrom[0m [0mself[0m[0;34m.[0m[0m_plot_args[0m[0;34m([0m[0mthis[0m[0;34m,[0m [0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    313[0m [0;34m[0m[0m
[1;32m    314[0m     [0;32mdef[0m [0mget_next_color[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/site-packages/matplotlib/axes/_base.py[0m in [0;36m_plot_args[0;34m(self, tup, kwargs, return_kwargs)[0m
[1;32m    496[0m [0;34m[0m[0m
[1;32m    497[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m!=[0m [0my[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 498[0;31m             raise ValueError(f"x and y must have same first dimension, but "
[0m[1;32m    499[0m                              f"have shapes {x.shape} and {y.shape}")
[1;32m    500[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m [0;32mor[0m [0my[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (48000,) and (120,)
ValueError: x and y must have same first dimension, but have shapes (48000,) and (120,)

